const merge = require('webpack-merge');

const paths = require('./paths.js');
const baseConfig = require('./base.config.js');
const getStyleLoaders = require('./getStyleLoaders.js');

const HtmlWebpackPlugin = require('html-webpack-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');

module.exports = merge(baseConfig, {
    mode: 'production',
    // Fail fast on the first error encountered during production builds.
    bail: true,
    devtool: 'source-map',
    output: {
        filename: 'js/[name].[contenthash:8].chunk.js',
    },
    // TODO: favicon loader, font loader
    module: {
        rules: [
            // Process styles.
            {
                test: /\.module\.scss$/,
                use: getStyleLoaders({
                    prependLoaders: [
                        {
                            // mini-css-extract-plugin takes the generated css
                            // output and extracts it to a file for a
                            // production build.
                            loader: MiniCssExtractPlugin.loader,
                            options: {
                                // Since we configure mini-css-extract to
                                // output files into a css/ folder (see
                                // plugins below), we need to let it know that
                                // the root context (build/) is 1 level higher.
                                // This will ensure any relative asset paths
                                // generated by the plugin are correct.
                                publicPath: '../'
                            }
                        }
                    ],
                    enableSourceMap: true
                })
            }
        ]
    },
    optimization: {
        // TODO: optimize css assets plugin
        // TODO: terser plugin?
    },
    plugins: [
        // TODO: Add ImageminWebpackPlugin
        // TODO: ModuleNotFoundPlugin
        // TODO: webpack.HotModuleReplacementPlugin
        // TODO: CaseSensitivePathsPlugin
        // TODO: WatchMissingNodeModulesPlugin
        // TODO: webpack.IgnorePlugin
        new MiniCssExtractPlugin({
            // TODO: figure out right filename + chunkFilename
            filename: 'css/[name].[hash].css'
        }),
        // Generates the index.html file using a pre-defined template and
        // injects a script tag at the bottom of the body referencing the
        // bundled js entry file.
        new HtmlWebpackPlugin({
            template: paths.indexHtml,
            minify: {
                collapseWhitespace: true,
                keepClosingSlash: true,
                minifyCSS: true,
                minifyJS: true,
                minifyURLs: true,
                removeComments: true,
                removeEmptyAttributes: true,
                removeRedundantAttributes: true,
                removeStyleLinkTypeAttributes: true,
                useShortDoctype: true
            }
        })
    ]
});
